spring:
  profiles:
    active: ${environment}

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_ENDPOINT}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false # 시작과 동시에 실행되는 것 방지

  # embeddable 사용 시 null 허용 X
  jpa:
    hibernate:
        ddl-auto: update # 엔티티가 없을 시 자동 생성
    properties:
      hibernate:
        create_empty_composites:
          enabled: true

  servlet:
    multipart:
      enabled: true

  # 종료 전 처리 중인 프로세스 100초간 대기
  lifecycle:
    timeout-per-shutdown-phase: 100s

# 작업 중인 프로세스 처리 후 종료
server:
  shutdown: graceful

# JWT 시크릿 키
app:
  auth:
    secret-key: ${SECRET_KEY}

# s3 설정
cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_ACCESS_KEY}
    s3:
      bucket: jikgong-image
      resize-bucket: jikgong-resize-bucket
    stack.auto: false #기본 cloudFormation 구성 시작 사용 x
    region:
      static: ap-northeast-2

# codef
codef:
  client-id: ${CODEF_CLIENT_ID}
  client-secret: ${CODEF_CLIENT_SECRET}
  public-key: ${CODEF_PUBLIC_KEY}

# naver alimtalk
ncp:
  service-id: ${NCP_SERVICE_ID}
  access-key: ${NCP_ACCESS_KEY}
  secret-key: ${NCP_SECRET_KEY}
  send-number: ${NCP_SEND_NUMBER}

management:
  endpoints:
    web:
      base-path: /jikgong
      exposure:
        include: prometheus, health

fcm:
  path: ${FCM_PATH}

webhook:
  slack:
    url: ${WEBHOOK_SLACK_URL}

kakao:
  api-key: ${KAKAO_API_KEY}

springdoc:
  swagger-ui:
    tags-sorter: alpha # Swagger UI를 알파벳 순으로 정렬